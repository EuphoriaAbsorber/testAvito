basePath: /api
definitions:
  model.CreateBanner:
    properties:
      content:
        $ref: '#/definitions/model.UserBanner'
      feature_id:
        type: integer
      is_active:
        type: boolean
      tag_ids:
        items:
          type: integer
        type: array
    type: object
  model.Error:
    properties:
      error: {}
    type: object
  model.Response:
    properties:
      body: {}
    type: object
  model.UserBanner:
    properties:
      text:
        type: string
      title:
        type: string
      url:
        type: string
    type: object
host: 127.0.0.1:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Banner Service back server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Banner Service API
  version: "1.0"
paths:
  /banner:
    get:
      consumes:
      - application/json
      description: Получение всех баннеров с фильтрацией по фиче и/или тегу
      operationId: getBanner
      parameters:
      - description: token
        in: header
        name: token
        type: string
      - description: feature_id
        in: query
        name: feature_id
        type: integer
      - description: tag_id
        in: query
        name: tag_id
        type: integer
      - description: limit
        in: query
        name: limit
        type: integer
      - description: offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Некорректные данные
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Пользователь не имеет доступа
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Не найдено
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.Error'
      summary: Получение всех баннеров с фильтрацией по фиче и/или тегу
    post:
      consumes:
      - application/json
      description: Создание нового баннера
      operationId: createBanner
      parameters:
      - description: Banner params
        in: body
        name: banner
        required: true
        schema:
          $ref: '#/definitions/model.CreateBanner'
      - description: token
        in: header
        name: token
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Некорректные данные
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Пользователь не имеет доступа
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Не найдено
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.Error'
      summary: Создание нового баннера
  /banner/{id}:
    delete:
      consumes:
      - application/json
      description: Удаление баннера по идентификатору
      operationId: deleteBanner
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: token
        in: header
        name: token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Некорректные данные
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Пользователь не имеет доступа
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Не найдено
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.Error'
      summary: Удаление баннера по идентификатору
    patch:
      consumes:
      - application/json
      description: Обновление содержимого баннера
      operationId: updateBanner
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: token
        in: header
        name: token
        type: string
      - description: Banner params
        in: body
        name: banner
        required: true
        schema:
          $ref: '#/definitions/model.CreateBanner'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Некорректные данные
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Пользователь не имеет доступа
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Не найдено
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.Error'
      summary: Обновление содержимого баннера
  /filldb:
    post:
      consumes:
      - application/json
      description: Заполнение базы тестовыми данными
      operationId: fillDB
      parameters:
      - description: tag_count
        in: query
        name: tag_count
        required: true
        type: integer
      - description: feature_count
        in: query
        name: feature_count
        required: true
        type: integer
      - description: banner_count
        in: query
        name: banner_count
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Некорректные данные
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.Error'
      summary: Заполнение базы тестовыми данными
      tags:
      - extra
  /user_banner:
    get:
      consumes:
      - application/json
      description: Получение баннера для пользователя
      operationId: getUserBanner
      parameters:
      - description: tag_id
        in: query
        name: tag_id
        required: true
        type: integer
      - description: feature_id
        in: query
        name: feature_id
        required: true
        type: integer
      - description: use_last_revision
        in: query
        name: use_last_revision
        type: boolean
      - description: token
        in: header
        name: token
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.UserBanner'
        "400":
          description: Некорректные данные
          schema:
            $ref: '#/definitions/model.Error'
        "401":
          description: Пользователь не авторизован
          schema:
            $ref: '#/definitions/model.Error'
        "403":
          description: Пользователь не имеет доступа
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: Не найдено
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.Error'
      summary: Получение баннера для пользователя
  /users:
    get:
      consumes:
      - application/json
      description: Получение пользователей и админов
      operationId: GetUsers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Внутренняя ошибка сервера
          schema:
            $ref: '#/definitions/model.Error'
      summary: Получение пользователей и админов
      tags:
      - extra
swagger: "2.0"
